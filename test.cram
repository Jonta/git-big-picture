#!/usr/bin/env cram
# vim: set syntax=cram :

# This file is part of git-big-picture
#
# Copyright (C) 2012-2018 Valentin Haenel <valentin.haenel@gmx.de>
#
# git-big-picture is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# git-big-piture is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with git-big-picture.  If not, see <http://www.gnu.org/licenses/>.

Cram (http://pypi.python.org/pypi/cram) tests for git-big-picture

  $ alias git-big-picture=$TESTDIR/git-big-picture

No repo

  $ git-big-picture
  fatal: '/.+/cramtests-.{6,8}/test.cram' is probably not a Git repository (re)
  [10]

create a fake repo and export vars

  $ git init -q
  $ git commit -q --allow-empty -m "foo"

run without options

  $ git-big-picture .
  fatal: Must provide an output option. Try '-h' for more information
  [8]

# run plain

#  $ git-big-picture -p
#  digraph {
#  \t"[0-9a-f]{40}"[label="master", color="/pastel13/2", style=filled]; (re) (esc)
#  }


mix --graphiz and --processed and others

  $ git-big-picture -p -g
  fatal: Options '-g | --graphviz' and '-p | --processed' are mutually exclusive.
  [7]
  $ git-big-picture -g -v true
  fatal: Options '-g | --graphviz' and '-p | --processed' are incompatible with other output options.
  [7]
  $ git-big-picture -p -v true
  fatal: Options '-g | --graphviz' and '-p | --processed' are incompatible with other output options.
  [7]
  $ git-big-picture -g -o file.svg
  fatal: Options '-g | --graphviz' and '-p | --processed' are incompatible with other output options.
  [7]
  $ git-big-picture -p -o file.svg
  fatal: Options '-g | --graphviz' and '-p | --processed' are incompatible with other output options.
  [7]

try wrong format

  $ git-big-picture -p -f foo
  fatal: 'dot' terminated prematurely with error code 1;
  probably you specified an invalid format, see 'man dot'.
  The error from 'dot' was:
  >>>Format: "foo" not recognized. Use one of: .*$ (re)
  
  [4]


mismatch format, filename takes precedence

  $ git-big-picture -f pdf -o file.svg
  $ ls
  file.svg
  $ rm file.svg
  $ ls

try just filename

  $ git-big-picture -o file.svg
  $ ls file.svg
  file.svg
  $ rm file.svg
  $ ls

try using differnt format

  $ git-big-picture -o file.pdf
  $ ls file.pdf
  file.pdf
  $ rm file.pdf
  $ ls


try no such viewer

  $ git-big-picture -f svg -v foo
  fatal: Error calling viewer: 'foo':
  >>>\[Errno 2\] No such file or directory.*$ (re)
  [6]

format but no extension

  $ git-big-picture -f svg -o file
  warning: Filename had no suffix, using format: svg
  $ ls
  file.svg
  $ rm file.svg
  $ ls

provide filename and viewer

  $ git-big-picture -o file.svg -v true
  $ ls
  file.svg
  $ rm file.svg
  $ ls

provide filename and viewer and format

  $ git-big-picture -f png -o file -v true
  warning: Filename had no suffix, using format: png
  $ ls
  file.png
  $ rm file.png
  $ ls

try profiling

  $ git-big-picture --pstats=stats -o file.svg
  $ ls stats
  stats
  $ rm stats file.svg
  $ ls
